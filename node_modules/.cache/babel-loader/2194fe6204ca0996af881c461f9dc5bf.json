{"ast":null,"code":"var _jsxFileName = \"/Users/karansingh/Desktop/divami-assign/src/components/progressBar.js\",\n    _s = $RefreshSig$();\n\nimport \"./progressBar.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressBar(_ref) {\n  _s();\n\n  let {\n    num\n  } = _ref;\n  // const [number, setNumber] = useState(0);\n  const [barColor, setBarColor] = useState(\"#EE887E\");\n\n  const percentRange = value => {\n    if (value < 25) return \"0% - 25%\";else if (value >= 25 && value < 50) return \"25% - 50%\";else if (value >= 50 && value < 75) return \"50% - 75%\";else if (value >= 75 && value <= 100) return \"75% - 100%\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progressBar_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: percentRange(number)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: num,\n      max: \"100\",\n      children: [\"`$\", number, \"%`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"81dDoYtfCIfh4xDz9I3cXnFpTO8=\");\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","ProgressBar","num","barColor","setBarColor","percentRange","value","number"],"sources":["/Users/karansingh/Desktop/divami-assign/src/components/progressBar.js"],"sourcesContent":["import \"./progressBar.css\";\nimport React, { useState } from \"react\";\n\nfunction ProgressBar({ num }) {\n  // const [number, setNumber] = useState(0);\n  const [barColor, setBarColor] = useState(\"#EE887E\");\n\n  const percentRange = (value) => {\n    if (value < 25) return \"0% - 25%\";\n    else if (value >= 25 && value < 50) return \"25% - 50%\";\n    else if (value >= 50 && value < 75) return \"50% - 75%\";\n    else if (value >= 75 && value <= 100) return \"75% - 100%\";\n  };\n\n  return (\n    <div className=\"progressBar_container\">\n      <div className=\"progressBar_header\">\n        <div>{percentRange(number)}</div>\n        {/* <input\n          type=\"number\"\n          value={num}\n          min=\"0\"\n          max=\"100\"\n          className=\"input_form\"\n          onChange={(e) => setNumber(e.target.value)}\n        /> */}\n        <div>{num}</div>\n      </div>\n      <progress value={num} max=\"100\">\n        `${number}%`\n      </progress>\n    </div>\n  );\n}\n\nexport default ProgressBar;\n"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,OAA8B;EAAA;;EAAA,IAAT;IAAEC;EAAF,CAAS;EAC5B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,SAAD,CAAxC;;EAEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;IAC9B,IAAIA,KAAK,GAAG,EAAZ,EAAgB,OAAO,UAAP,CAAhB,KACK,IAAIA,KAAK,IAAI,EAAT,IAAeA,KAAK,GAAG,EAA3B,EAA+B,OAAO,WAAP,CAA/B,KACA,IAAIA,KAAK,IAAI,EAAT,IAAeA,KAAK,GAAG,EAA3B,EAA+B,OAAO,WAAP,CAA/B,KACA,IAAIA,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,GAA5B,EAAiC,OAAO,YAAP;EACvC,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,wBACE;QAAA,UAAMD,YAAY,CAACE,MAAD;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAA,UAAML;MAAN;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAU,KAAK,EAAEA,GAAjB;MAAsB,GAAG,EAAC,KAA1B;MAAA,iBACKK,MADL;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA9BQN,W;;KAAAA,W;AAgCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}