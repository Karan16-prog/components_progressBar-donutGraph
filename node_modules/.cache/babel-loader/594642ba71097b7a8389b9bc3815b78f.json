{"ast":null,"code":"var _jsxFileName = \"/Users/karansingh/Desktop/divami-assign/src/components/progressBar.js\",\n    _s = $RefreshSig$();\n\nimport \"./progressBar.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressBar() {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [barColor, setBarColor] = useState(\"#EE887E\");\n\n  const percentRange = num => {\n    if (num < 25) return \"0% - 25%\";else if (num >= 25 && num < 50) return \"25% - 50%\";else if (num >= 50 && num < 75) return \"50% - 75%\";else if (num >= 75 && num <= 100) return \"75% - 100%\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progressBar_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: percentRange(number)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: number,\n      max: \"100\",\n      children: [\"`$\", number, \"%`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"vK3n9WlODTWMlp40VYLEgvnu72M=\");\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","ProgressBar","number","setNumber","barColor","setBarColor","percentRange","num","e","target","value"],"sources":["/Users/karansingh/Desktop/divami-assign/src/components/progressBar.js"],"sourcesContent":["import \"./progressBar.css\";\nimport React, { useState } from \"react\";\n\nfunction ProgressBar() {\n  const [number, setNumber] = useState(0);\n  const [barColor, setBarColor] = useState(\"#EE887E\");\n\n  const percentRange = (num) => {\n    if (num < 25) return \"0% - 25%\";\n    else if (num >= 25 && num < 50) return \"25% - 50%\";\n    else if (num >= 50 && num < 75) return \"50% - 75%\";\n    else if (num >= 75 && num <= 100) return \"75% - 100%\";\n  };\n\n  return (\n    <div className=\"progressBar_container\">\n      <div>\n        <div>{percentRange(number)}</div>\n        <input value={number} onChange={(e) => setNumber(e.target.value)} />\n      </div>\n      <progress value={number} max=\"100\">\n        `${number}%`\n      </progress>\n    </div>\n  );\n}\n\nexport default ProgressBar;\n"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,SAAD,CAAxC;;EAEA,MAAMM,YAAY,GAAIC,GAAD,IAAS;IAC5B,IAAIA,GAAG,GAAG,EAAV,EAAc,OAAO,UAAP,CAAd,KACK,IAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAAvB,EAA2B,OAAO,WAAP,CAA3B,KACA,IAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAAvB,EAA2B,OAAO,WAAP,CAA3B,KACA,IAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,GAAxB,EAA6B,OAAO,YAAP;EACnC,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAA,wBACE;MAAA,wBACE;QAAA,UAAMD,YAAY,CAACJ,MAAD;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,KAAK,EAAEA,MAAd;QAAsB,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;MAAhD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAU,KAAK,EAAER,MAAjB;MAAyB,GAAG,EAAC,KAA7B;MAAA,iBACKA,MADL;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAtBQD,W;;KAAAA,W;AAwBT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}